# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build:

    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
    - uses: actions/checkout@v4 # 체크아웃 해당 코드를 기반으로 작업을 진행
    - name: Set up JDK 17       # JDK 17 버전
      uses: actions/setup-java@v4 
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    # 테스트 폴더 스킵 
    - name: Build with Maven (Skip Tests)
      run: mvn -B -DskipTests=true package

    # - name: Build Docker image
    #   run: mvn dockerfile:build
    - name: docker image build
      working-directory: hello
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/mildo .

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_PASSWORD }}/mildo

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # 스냅샷 제출 작업 세팅
    # - name: Update dependency graph
    #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
